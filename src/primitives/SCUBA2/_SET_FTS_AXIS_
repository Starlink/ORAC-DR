=head1 NAME

_SET_FTS_AXIS_ - sets the 3rd axis to the moving mirror position

=head1 SYNOPSIS

 _SET_FTS_AXIS_

=head1 DESCRIPTION

This primitive extracts the position of the moving mirror and uses
it to set the third axis.

=head1 ARGUMENTS

None.

=head1 EXTERNAL TASKS

NDFPACK.

=head1 OUTPUT DATA

None

=head1 OUTPUT FILES

None.

=head1 NOTES

None.

=head1 AUTHOR

Graham Bell E<lt>g.bell@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2012 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

use JSA::Headers qw/read_jcmtstate/;

my @output = ();

for (my $i = 1; $i <= $Frm->nfiles(); $i ++) {
  my ($in, $out) = $Frm->inout('_fax', $i);
  my %state = read_jcmtstate($in, undef, 'FTS_POS');

  my $tmp = new ORAC::TempFile(OPEN => 1, SUFFIX => '.dat');
  my $fh= $tmp->handle();
  print $fh $_, "\n" foreach @{$state{'FTS_POS'}};
  $fh->close();

  $Mon{'ndfpack_mon'}->obeyw('ndfcopy', "$in $out");
  $Mon{'ndfpack_mon'}->obeyw('setaxis', "$out 3 file file=$tmp");
  $Mon{'ndfpack_mon'}->obeyw('wcsframe', "$out axis");

  push @output, $out;
}

$Frm->files(@output);
