=head1 NAME

_FILL_ZPD_MAP_ - fills gaps in a ZPD map

=head1 SYNOPSIS

 _FILL_ZPD_MAP_

=head1 DESCRIPTION

This primitive runs thresh and fillbad.

=head1 ARGUMENTS

None.

=head1 EXTERNAL TASKS

KAPPA.

=head1 OUTPUT DATA

None

=head1 OUTPUT FILES

None.

=head1 NOTES

None.

=head1 AUTHOR

Graham Bell E<lt>g.bell@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2012 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

my @output = ();

my $zpd = $Frm->uhdr('FTS_ZPD_ESTIMATE');
orac_termerr('FTS_ZPD_ESTIMATE is missing') unless defined $zpd;

my $min = $zpd - 3.0;
my $max = $zpd + 3.0;

for (my $i = 1; $i <= $Frm->nfiles(); $i ++) {
  my ($in, $thr) = $Frm->inout('_pth', $i);
  #$Frm->push_intermediates($thr);
  $Mon{'kappa_mon'}->obeyw('thresh', "$in $thr $min $max bad bad");

  my (undef, $out) = $Frm->inout('_zpd', $i);
  $Mon{'kappa_mon'}->obeyw('fillbad', "$thr $out niter=2 size=[2,2]");

  $Frm->subarray($out);
  $Cal->zeropath($out);
  $Cal->zeropathindex->add($out, {%{$Frm->hdr}, %{$Frm->uhdr}});
  push @output, $out;
}

$Frm->files(@output);

