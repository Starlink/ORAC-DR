# -*-cperl-*-

=head1 NAME

_MAKE_MOSAIC_GROUP_ - Create group mosaic

=head1 SYNOPSIS

_MAKE_MOSAIC_GROUP_  COADD_MODE=RUNNING

=head1 DESCRIPTION

This primitive creates a new Group mosaic from the newest Frame
image(s). The input images may be combined in one of two ways, using
the B<COADD_MODE> parameter, depending on processing time
constraints. The quickest way is to simply mosaic the current Frame
and Group images together (C<RUNNING>). Output variances from this
method rely entirely on the presence of input variances. The other
method (C<STACKALL>) is to ignore any existing Group image (though it
may still be used as a reference image) and combine all of the
available Frame images to create a new Group mosaic. Output variances
may be derived from input variances or using the contributions to the
output pixels.

A half-way house option (C<DESPIKE>) exists which allows processing to
be delayed until a sufficient number of Frame images exist to permit a
reasonable variance to be estimated assuming the input Frame images
have no internal variances. This method also deals with the presence
of spikes and/or outlying values. See the C<COADD_MODE> parameter
below for full details.

The mosaicking task may be specified using the B<MAKEMOS> parameter
below.

The user may also specify that all processing should wait until the
current observation is complete. This is relevant only for running the
pipeline at the telescope.

=head1 ARGUMENTS

The following arguments are supported:

=over 4

=item B<COADD_MODE>

Controls the coadding mode for the primitive. If C<RUNNING>, the new
frames are combined with the existing group image. If C<STACKALL> the
group image is recreated from all the constituent Frames each time it
is called. If C<DESPIKE> then the mosaicking task is set to MAKEMOS
and the parameter B<NMOS> must be specified. Default mode is
C<STACKALL>. Passed to _MAKE_MOSAIC_.

=item B<MAKEMOS>

A flag to denote whether to use CCDPACK MAKEMOS for mosaicking the
images. Default is 0 (no), which uses KAPPA WCSMOSAIC instead. Passed
directly to _MAKE_MOSAIC_.

=item B<MAKEMOS_METHOD>

The method by which MAKEMOS combines the images. Default is
C<mean>. See the MAKEMOS documentation for a description of the
possible values. Passed directly to _MAKE_MOSAIC_.

=item B<METHOD>

The method to be used for resampling the aligned images. This
corresponds to the C<method> parameter for WCSMOSAIC and WCSALIGN,
which is different from that for MAKEMOS. See WCSALIGN and/or
WCSMOSAIC documentation for further details. Default value is
C<nearest>. Passed directly to _MAKE_MOSAIC_.

=item B<NMOS>

Number of Frame images to mosaic together before coadding to
Group. Only used if B<COADD_MODE> is DESPIKE or for DREAM/STARE data
being processed by the quick-look pipeline. Default is 10. Passed
directly to _MAKE_MOSAIC_.

=item B<SIGMAS>

If B<MAKEMOS_METHOD> is C<sigma>, then this is the number of standard
deviations at which to clip the data before combining. Default is 4.

=item B<VERBOSE>

Flag to denote whether to display extra information. Default is 0
(no). Passed directly to _MAKE_MOSAIC_.

=item B<WAIT>

Flag to denote whether to wait until the current observation has ended
before processing the data. Only relevant for online processing at the
telescope. Default is 0 (no).

=back

=head1 EXTERNAL TASKS

The following external tasks are used:

=over 4

=item ORAC-DR PRIMITIVES

_MAKE_MOSAIC, _MAKE_MOSAIC_GROUP_DESPIKE_

=back

=head1 NOTES

It is assumed that all of the input images are aligned to the same
coordinate frame.

Defining the output filename for the Group mosaic is a bit of a hack.

For the DREAM/STARE quick-look pipeline _MAKE_MOSAIC_GROUP_DESPIKE_
is called as it is optimized for that use.

=head1 OUTPUT DATA

On exit, the Group product is defined as C<newimage> if a new Group
file was created. The Group file is also tagged with the same label.

=head1 OUTPUT FILES

Creates a single output Group image with a suffix of C<_mos>.

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2004-2008 Particle Physics and Astronomy Research
Council
Copyright (C) 2004-2008,2012-2013 University of British Columbia.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Should I be verbose (default to no)
my $verbose = get_prim_arg($_PRIM_ARGS_, "VERBOSE", 0);

# Are we waiting until the observation has finished?
my $wait = get_prim_arg($_PRIM_ARGS_, "WAIT", 0);

# Check whether the proceed conditions are met - proceed if we're not
# waiting until the obs has ended, OR if we *are* waiting and the obs
# has ended, provided a new image exists.
if ( (!$wait || ($wait && $Frm->uhdr('OBSEND')) ) && $Frm->tagexists("newimage") ) {

  # Do we want to use makemos?
  my $makemos = get_prim_arg($_PRIM_ARGS_, "MAKEMOS", 0);

  # Determine coadd mode as that may over-ride choice of makemos
  # parameter
  my $coadd_mode = uc(get_prim_arg($_PRIM_ARGS_, "COADD_MODE", "STACKALL"));

  # Is this the DREAM/STARE quick-look pipeline?
  my $qlflag = $Frm->uhdr("QUICKLOOK");
  my $ql = 0;
  if ( defined $qlflag ) {
    $ql = 1 if ($qlflag == 1);
  }

  my $nmos = 1;
  if ( $coadd_mode eq 'DESPIKE' || $ql ) {
    $makemos = 1;
    # Number of images to mosaic for calculating a statistically-valid
    # variance
    $nmos = get_prim_arg($_PRIM_ARGS_, "NMOS", 10);
  }

  my ($makemos_method, $sigmas);
  if ( $makemos ) {
    # Method for combining images in makemos
    $makemos_method = get_prim_arg($_PRIM_ARGS_, "MAKEMOS_METHOD", "mean");

    # Number of sigmas to use if makemos_method = sigma (sigma-clipped mean)
    $sigmas = get_prim_arg($_PRIM_ARGS_, "SIGMAS", 4.0);
  }

  # If this is the DREAM/STARE quick-look pipeline, use the
  # ql-optimized primitive which waits until NMOS images exist before
  # creating the Group image
  if ( $ql ) {
    # This primitive always uses makemos, default method is SIGMA so
    # pass on SIGMAS parameter
    _MAKE_MOSAIC_GROUP_DESPIKE_ NMOS=$nmos VERBOSE=$verbose SIGMAS=$sigmas
  } else {
    # Method for determining resampling the image during alignment
    my $method = get_prim_arg($_PRIM_ARGS_, "METHOD", "nearest");

    # The running and despike group coadds combine Frame images with
    # the existing group "reduced" image so make sure the Group file
    # is correct
    $Grp->tagretrieve("reduced")
      if ($Grp->tagexists("reduced") && $coadd_mode ne "STACKALL");

    _MAKE_MOSAIC_ GROUP=1 MAKEMOS=$makemos MAKEMOS_METHOD=$makemos_method METHOD=$method COADD_MODE=$coadd_mode VERBOSE=$verbose NMOS=$nmos

    if ($_MAKE_MOSAIC_{NEWIMAGE}) {
      orac_print "Updating product and tags...\n";
      # Store the "coadd" product in the new file...
      $Grp->force_product_update("coadd", $Grp->file);
      $Grp->tagset("coadd");
      # ...but use "newimage" as the product for the purposes of the pipeline
      $Grp->product("newimage");
      $Grp->tagset("newimage");
    }
  }
} else {
  # Update group product to be "old" if a new image was created on the
  # previous pass through the recipe
  $Grp->product("oldimage") if ($Grp->product && $Grp->product eq "newimage");
}
