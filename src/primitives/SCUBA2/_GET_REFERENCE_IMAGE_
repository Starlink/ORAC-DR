# -*-cperl-*-

=head1 NAME

_GET_REFERENCE_IMAGE_ - Determine the name of a reference image for alignment to a common coordinate frame

=head1 SYNOPSIS

_GET_REFERENCE_IMAGE_ SKYREF=1 COORD_FRAME=ICRS

=head1 DESCRIPTION

This primitive determines the name of a reference image to be used in
aligning images to a common coordinate system. If the B<GROUPREF>
parameter is true, the name of the current Group file is returned if
one exists, else the Group uhdr is queried for the name of a suitable
reference. If neither exists and the user requests alignment in a SKY
frame then a new reference image will be created. In all other cases
the first image in the frame object is chosen as reference.

=head1 ARGUMENTS

The following arguments are supported:

=over 4

=item B<COORD_FRAME>

Celestial frame for reference image. No default but not used if
B<SKYREF> is false.

=item B<GROUPREF>

A flag to denote whether to use the Group file as the current
reference if it exists. Default is 1 (yes).

=item B<PIXEL_SCALE>

Pixel scale in arcsec to be used if a new reference image is to be
created. Default is to use the appropriate scale from the calibration
system.

=item B<SKYREF>

A flag to denote whether to align the images to a celestial coordinate
frame. The default is 0 (false) and the images will be aligned with
either the group file if it exists or the first image in the Frame.

=item B<VERBOSE>

A flag to denote whether the primitive should issue verbose
information messages. Default is 0 (false).

=back

=head1 EXTERNAL TASKS

The following external tasks are used:

=over 4

=item KAPPA:

NDFCOPY, WCSATTRIB

=item HDSTOOLS:

HDELETE

=item ORAC-DR PRIMITIVES:

_CREATE_REFERENCE_IMAGE_

=back

=head1 OUTPUT DATA

None.

=head1 OUTPUT FILES

If a new reference image is created, it will have the extension C<_ref>.

=head1 NOTES

To prevent excessive propagation of provenance information when using
the Group file as the reference image, a copy is made and the
provenance in the copy of the Group file is deleted.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2007-2008,2014 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Should I be verbose? (default to no)
my $verbose = get_prim_arg($_PRIM_ARGS_, "VERBOSE", 0);

# Has the user said that it's OK to use the Grp file as reference
# image?  Default to yes.
my $usegrpasref = get_prim_arg($_PRIM_ARGS_, "GROUPREF", 0);

# Has the user specified a pixel scale?
my $pixel_scale = get_prim_arg($_PRIM_ARGS_, "PIXEL_SCALE", $Cal->pixelscale);
# Could this be checked against the pixel scale for an existing
# reference image? What if it's different?

# Coordinate frame for reference image
my $cosys_out = get_prim_arg($_PRIM_ARGS_, "COORD_FRAME", "");
my $reftype = ($cosys_out =~ /fplane/i) ? "FPLANE" : "SKY";

my $refimage;
# If there's a Group file, use that
if ($Grp->file_exists && $usegrpasref) {
  # Temporary HACK - take copy of group image and delete PROVENANCE
  # because it was causing problems with propagation
  $refimage = new ORAC::TempFile;
  my $in = $Grp->file;
  $Mon{ndfpack_mon}->obeyw("ndfcopy","in=$in out=$refimage");
  $Mon{hdstools_mon}->obeyw("hdelete","$refimage.more.provenance");
} elsif ( $Grp->refimage($reftype) ) {
  # Or use the current group reference image
  $refimage = $Grp->refimage($reftype);
} else {
  # OK so there's no reference image yet. Should we create one in a
  # WCS-based (e.g. SKY) frame? Default to yes.
  my $wcsref = get_prim_arg($_PRIM_ARGS_, "SKYREF", 1);

  # Create a reference image if necessary: always for non-scan mode
  # data, but for scan-mode data only in the case of an FPLANE
  # reference or non-source tracking sequences
  if ( $wcsref && ($Frm->uhdr('ORAC_OBSERVATION_MODE') !~ /scan/i ||
                     ($Frm->uhdr("ORAC_OBSERVATION_MODE") =~ /scan/ && $Frm->hdr("SEQ_TYPE") !~ /science|point|focus/) ||
                     ($reftype eq "FPLANE"))
     ) {
    # If not set, just use the current system
    if ( $cosys_out eq "" ) {
      my $firstfile = $Frm->file(1);
      $Mon{ndfpack_mon}->obeyw("wcsattrib","ndf=$firstfile mode=get name=system(1)");
      (my $ORAC_STATUS, $cosys_out) = $Mon{ndfpack_mon}->get("wcsattrib","value");
    }
    # Set the output coordinate frame
    _CREATE_REFERENCE_IMAGE_ SYSTEM=$cosys_out VERBOSE=1 PIXEL_SCALE=$pixel_scale
    $refimage = $_CREATE_REFERENCE_IMAGE_{REFIMAGE};
  } else {
    # Otherwise use the first file in the current Frm
    $refimage = $Frm->file(1);
  }
}

$_GET_REFERENCE_IMAGE_{REFIMAGE} = $refimage;
