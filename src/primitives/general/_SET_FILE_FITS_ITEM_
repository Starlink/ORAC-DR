# -*-cperl-*-

=head1 NAME

_SET_FILE_FITS_ITEM_

=head1 SYNOPSIS

  _SET_FILE_FITS_ITEM_  FILE=$file KEY=OBJECT VALUE=TEST

=head1 DESCRIPTION

Adds or modifies a fits header for the file given in the FILE parameter

=head1 PARAMETERS

=over 4

=item B<FILE>

The name of the file to be modified.  This parameter is mandatory and is
not derived automatically.

=item B<KEY>

=item B<VALUE>

=item B<COMMENT>

If not defined, the current comment will be retained.

=item B<STRING>

Boolean. If true, the header item will be forced to a string, if false
(but defined) the item will be forced to a numeric value.  If not defined,
the new item will be a string if the item already exist and is currently
a string, else the default FITSMOD behaviour will be used.

=back

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.edE<gt>,
Malcolm Currie E<lt>mjc@star.rl.ac.ukE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.
Copyright (C) 2001-2005 Particle Physics and Astronomy Research Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place,Suite 330, Boston, MA  02111-1307, USA

=cut

my $file = get_prim_arg( $_PRIM_ARGS_, "FILE", undef );
my $key = get_prim_arg( $_PRIM_ARGS_, "KEY", undef );
my $value = get_prim_arg( $_PRIM_ARGS_, "VALUE", undef );
my $comment = get_prim_arg( $_PRIM_ARGS_, "COMMENT", undef );
my $isstring = get_prim_arg( $_PRIM_ARGS_, "STRING", undef );

if ( !defined( $file ) ) {
  orac_warn "Must supply file that will have FITS header modified.\n";
} elsif ((!defined($key)) || (!defined($value))) {
  orac_warn "Must specify key/value pair for FITS header (got '".
      ( defined $key ? $key : "<undef>" ) .
      "' => '".
      ( defined $value ? $value : "<undef>" ) .
      ")'\n";

} else {

  # Get the FITS header.
  my $hdr = new Astro::FITS::Header::NDF( File => $file );

  # Modify the comment (set to null if undefined, replace | with a space,
  # put single quotes around it).
  if (!defined($comment)) { $comment = "\$C"; }
  $comment =~ s/\|/ /g;
  $comment = "\'" . $comment . "\'";

  # Update keyword
  # --------------
  my $item = $hdr->itembyname($key);
  if (defined $item) {

    # Force a string if the existing item is a string, unless we have
    # an override.
    my $string;
    if (defined $isstring) {
      $string = ($isstring ? 'TRUE' : 'FALSE' );
    } else {
      $string = ($item->type eq 'STRING' ? 'TRUE' : 'FALSE' );
    }

    # The key exists but a null value is requested, fill the value with blanks.
    if ( lc( $value ) eq "<null>" ) {
       $Mon{'ndfpack_mon'}->obeyw( "fitsmod", "ndf=$file keyword=$key edit=null" );

    # The key exists, so update with the new value (and comment if necessary).
    # Note the value and comment must be enclosed in quotes in case they
    # include spaces.
    } else {
       my $pars = "edit=update position=! string=$string ";
       $pars .= "ndf=$file keyword=$key value=\"$value\" comment=$comment";
       $Mon{'ndfpack_mon'}->obeyw( "fitsmod", "$pars" );
    }

  # Write new keyword
  # -----------------
  } else {

    # If isstring is defined we use it, else we allow FITSMOD to default.
    my $string = '';
    if (defined $isstring) {
      $string = "string=". ( $isstring ? "TRUE" : 'FALSE' );
    }

    # The key doesn't exist, so add the new value (and comment if necessary).
    my $pars = "edit=write position=! $string ";
    $pars .= "ndf=$file keyword=$key value=\"$value\" comment=$comment";
    $Mon{'ndfpack_mon'}->obeyw( "fitsmod", "$pars" );

  }

}
