# vim: syn=perl

=head1 NAME

_GET_GROUP_HEADER_ - Get group value of given header

=head1 DESCRIPTION

This primitive finds the first defined value of the header
given by the argument C<KEY> in each group.  If subsequent
values differ, the original value is stored in the C<uhdr>
WESLEY_SET_HEADERS (for subsequent writing by C<_SET_HEADERS_>).

=head1 COPYRIGHT

Copyright (C) 2022 East Asian Observatory
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc.,51 Franklin
Street, Fifth Floor, Boston, MA  02110-1301, USA

=cut

my $key = get_prim_arg($_PRIM_ARGS_, 'KEY', undef);

orac_throw("FITS header key not specified")
    unless defined $key;

my $group_item = $Grp->uhdr()->{'WESLEY_GROUP_HEADER'}->{$key};

my $fits = $Frm->fits;
my $item = $fits->itembyname($key);

unless (defined $group_item) {
    unless (defined $item) {
        orac_warn("FITS header '$key' is undefined\n");
    }
    else {
        $Grp->uhdr()->{'WESLEY_GROUP_HEADER'}->{$key} = $item;
    }
}
elsif ((not defined $item) or (not $group_item->equals($item))) {
    for (my $i = 0; $i < $Frm->nfiles(); $i ++) {
        my $in = $Frm->file($i + 1);

        $Frm->uhdr()->{'WESLEY_SET_HEADERS'}->{$in}->{$key} = $group_item;
    }
}
