# vim: syn=perl

=head1 NAME

_WESLEY_GOODBYE_ - Recipe end primitive for WESLEY

=head1 DESCRIPTION

This primitive writes a file list for subsequent use with ORAC-DR.  Any such
output files are removed from the frame's raw file list so that they are not
removed by C<orac_process_frame> at the end of processing.

=head1 COPYRIGHT

Copyright (C) 2019 East Asian Observatory
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc.,51 Franklin
Street, Fifth Floor, Boston, MA  02110-1301, USA

=cut

use File::Spec;
use IO::File;

my $list_file = $RECPARS{'WESLEY_FILE_LIST'} // "preproc_${$}.lis";

orac_say('Writing preprocessed file list to ' . $list_file);

my $fh = new IO::File($list_file, 'a');

printf $fh "# %s - %s: %s #%s\n",
    ORAC::Version->getApp(),
    $Frm->uhdr('ORAC_DR_RECIPE'),
    ($Frm->file() =~ /(\d{8})/),
    $Frm->number();

my @output = $Frm->files();
my $dirname = $ENV{'ORAC_DATA_OUT'};
printf $fh "%s\n", File::Spec->catfile($dirname, $Frm->fullfname($_))
    foreach @output;

$fh->close();

# Make sure the output files are not left in "raw" so that the pipeline
# doesn't remove them at the end of orac_process_frame.
my %output = map {$_ => 1} @output;
# Unfortunately $Frm->raw does not accept empty lists, so set directly.
@{$Frm->{'RawName'}} = grep {not exists $output{$_}} $Frm->raw;
