# -*-cperl-*-

=head1 NAME

_COLLAPSE_BASELINED_REGIONS_ - Collapse a cube over
previously determined baselined regions.

=head1 DESCRIPTION

The primitive determines a continuum map for a spectral cube
by first masking the non-baseline regions, and then collapsing
along the spectral axis.

=head1 ARGUMENTS

=over 4

=item AXIS = INTEGER (Given)

Axis along which to collapse.  [3]

=item ESTIMATOR = STRING (Given)

The method to use for estimating the output pixel values. This can be
any of those listed for the KAPPA:COLLAPSE task.  ['mean']

=item SUFFIX = STRING (Given)

File suffix to use.  ['cont']

=back

=head1 NOTES

=over 4

None.

=back

=head1 OUTPUT DATA

=over 4

=item *

The collapsed cube with _cont suffix.

=back

=head1 TASKS

KAPPA: COLLAPSE.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

Malcolm J. Currie E<lt>mjc@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research Council.

Copyright (C) 2018 Science and Technology Facilities Council.

All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

# Deal with arguments.
my $axis = get_prim_arg( $_PRIM_ARGS_, "AXIS", 3 );
my $estimator = get_prim_arg( $_PRIM_ARGS_, "ESTIMATOR", 'mean' );
my $suffix = get_prim_arg( $_PRIM_ARGS_, "SUFFIX", 'cont' );

# Mask out regions not in the baseline regions.
_MASK_BASELINE_REGIONS_ INVERSE=1 AXIS=$axis

# Get/set filenames.
my ( $in, $out ) = $Frm->inout( '_' . $suffix );

# Collapse the Frame object using the given estimator.
my $params = "in=$in out=$out estimator=$estimator axis=$axis ";
$params .= "title='Continuum' trim=false wlim=0.0";
$Mon{'kappa_mon'}->obeyw( "collapse", "$params" );

# Report to user.
orac_print "$in to $out:\n";
orac_print " Collapsed using $estimator estimator.\n";

# Update the Frm object.
$Frm->file( $out );

# Display if necessary.
$Display->display_data( $Frm ) if defined $Display;

# Tidy-up output.
orac_print "\n";
