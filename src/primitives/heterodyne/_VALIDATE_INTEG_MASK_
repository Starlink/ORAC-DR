=head1 NAME

_VALIDATE_INTEG_MASK_

=head1 DESCRIPTION

This primitive determines whether the integ mask for standing-wave
removal can be used.  At present, it merely checks that there is 
some region devoid of emission.  More-sophisticated tests may be
added as necessary.

=head1 ARGUMENTS

=over 4

=item MASK = STRING (Given)

The name of the integ mask NDF whose suitability is being tested.

=back

=head1 NOTES

=over 4

=item If the mask fails to pass muster, a warning is issued, and
the recipe parameter STANDING_WAVE_EMISSION_MASK is set to
false for all the Frames in the current Group.

=back

=head1 TASKS

KAPPA: STATS.

=head1 AUTHORS

Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 2024 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

my $integ_mask = get_prim_arg( $_PRIM_ARGS_, "MASK", undef );

if ( ! defined( $integ_mask ) ) {
   orac_err "_VALIDATE_INTEG_MASK_: Programming error. MASK argument is undefined.\n";
}

# Check that the integ mask is not all bad.  Warn if it is entirely bad.
# Override the recipe parameter that requested the integ mask's use, so
# that later standing-wave removal primitives will not attempt to use the
# mask.
$Mon{'kappa_mon'}->obeyw( "stats", "ndf=$integ_mask" );
my ( $ORAC_STATUS, $numgood ) = $Mon{'kappa_mon'}->get( "stats", "numgood" );
if ( $numgood == 0 ) {
   $integ_mask = undef;
   orac_warn "Emission spans the entire integ, and hence will not " .
             "be used to find the first approximations of the " .
             "standing waves.\n";
            
   foreach my $tmpFrm ( $Grp->members ) {
      $tmpFrm->uhdr( "RECPAR_STANDING_WAVE_EMISSION_MASK", 0 );
   }
}
