# -*-cperl-*-

=head1 NAME

_QA_WITH_MASKING_ - Run quality assurance tests and mask out spectra
that fail a consistency check between Tsys and observed RMS.

=head1 DESCRIPTION

This primitive performs quality assurance tests on raw timeseries
data, then uses information gleaned from those tests to mask out bad
data.

=head1 ARGUMENTS

=over 4

=item MASK = STRING (Given)

When QA tests are performed, the various JCMT Legacy Surveys have
different thresholds for what counts as bad data. If this string is
set, then that given survey's thresholds will be used when masking out
data. If it is not set, then the value of the SURVEY header for the
current Frame object will be used. If that is not defined, then the
default Telescope thresholds (which are much less stringent than
survey thresholds) will be used. Case-insensitive. ['telescope']

=item METHOD = STRING (Given)

How to detect and mask out emission so as to not confuse matters when
the RMS is determined. 'NARROW' tells the primitive to mask out the
central 10% of the bandpass. 'STANDARD' tells the primitive to mask
out the central 25% of the bandpass. 'WIDE' tells the primitive to
mask out the central 50% of the bandpass. 'AUTO' tells the pipeline to
use MFITTREND to attempt to automatically find emission and mask that
out. ['AUTO']

=item SURVEY_OVERRIDE = STRING (Given)

If defined, override the survey listed in the SURVEY header. The given
survey will be used for QA thresholds. ['']

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for ACSIS timeseries data.

=back

=head1 OUTPUT DATA

=over 4

=item *

Masked timeseries data with suffix _tsmask.

=back

=head1 TASKS

None, but see _QA_SENSITIVITY_VARIATION_, and
_QA_RMS_TSYS_CONSISTENCY_.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Malcolm J. Currie E<lt>mjc@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2008, 2014 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

my $method = uc( get_prim_arg( $_PRIM_ARGS_, "METHOD", "AUTO" ) );
my $survey_override = get_prim_arg( $_PRIM_ARGS_, 'SURVEY_OVERRIDE', undef );

orac_say "\n\nQuality assurance with masking";
my $underline = "-" x 43;
orac_say "$underline\n";

my $mask = uc( get_prim_arg( $_PRIM_ARGS_, 'MASK', $Frm->uhdr( "SURVEY_BR" ) ) );

if ( defined( $survey_override ) ) {
   _SET_SURVEY_HEADERS_ OVERRIDE=$survey_override
} else {
   _SET_SURVEY_HEADERS_
}

_QA_SYSTEM_TEMPERATURE_

_QA_SENSITIVITY_VARIATION_ METHOD=$method

if ( defined( $survey_override ) ) {
   _QA_TIMESERIES_CHECK_ METHOD=$method SURVEY=$survey_override
} else {
   _QA_TIMESERIES_CHECK_ METHOD=$method
}

_QA_RMS_TSYS_CONSISTENCY_ MASK=$mask

