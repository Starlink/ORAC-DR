my $freqsmooth = get_prim_arg( $_PRIM_ARGS_, "FREQUENCY_SMOOTH", 25 );
my $method =  get_prim_arg( $_PRIM_ARGS_, "METHOD", 'clumpfind' );
my $per_line = get_prim_arg( $_PRIM_ARGS_, "PER_LINE", 0 );
my $rms_levels =  get_prim_arg( $_PRIM_ARGS_, "RMS_THRESHOLD", '3.0,4.0' );
my $spatsmooth = get_prim_arg( $_PRIM_ARGS_, "SPATIAL_SMOOTH", 3 );
my $threshold = get_prim_arg( $_PRIM_ARGS_, "THRESHOLD", 0.001 );

my ( $integ_mask, $params );
orac_say "Form emission mask for standing-wave removal\n";
my $underline = "-" x 56;
orac_say "$underline\n";

# Form the integ moment map and make it the current frame.
_CREATE_MOMENTS_MAPS_THROUGH_SMOOTHING_ GROUP=1 MOMENTS=integ METHOD=$method RMS_THRESHOLD=$rms_levels FREQUENCY_SMOOTH=$freqsmooth SPATIAL_SMOOTH=$spatsmooth ORDER=1 PER_LINE=$per_line

# Mask the emission found in the group integ map.
{
   my $integ_map = $Grp->inout( "_integ"  );
   ( undef, $integ_mask ) = $Frm->inout( "integmask" );
   my $integ_file = $integ_map . ".sdf";
   if ( -e $integ_file ) {
      orac_print "Using " . $integ_map . " to mask emission regions.";
      $params = "in=$integ_map out=$integ_mask newhi=bad newlo=0.0 thrlo=0 thrhi=$threshold";
      orac_print "Created $integ_mask.";
      $Mon{'kappa_mon'}->obeyw( "thresh", "$params" );

# For some reason, there is no integ map.  This might be a lack of
# emission.  Instead create an image the size of the spatial axes of
# the group PPV, filled with zeroes.  Thus all the spectra in the
# scan direction are used to corrrect for the standing waves.       
   } else {
      orac_warn "There was no integ map to mask to define emission.\n";

      my $in = $Grp->file;
      $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in(,,~1) out=oracblank trim trimwcs" );
      $params = "in=oracblank  out=$integ_mask scalar=0.0";
      $Mon{'kappa_mon'}->obeyw( "cmult", "$params" );
   }
}

$_MAKE_EMISSION_MASK_{MASK} = $integ_mask;
