# -*-cperl-*-

=head1 NAME

_COLLAPSE_CENTRAL_LINE_ -- Collapse around the central line in a cube.

=head1 DESCRIPTION

This primitive collapses a baselined spectral cube along the spectral
axis between the two baseline regions.  The regions are the middle
pair numerically (rather than spectrally).  Historically, there would
have been but two baseline regions, one either side of a single
spectral line. Now there can be many baseline regions interspersed
between emision lines.  The middle pair may not be at the strongest or
most spectrally central line.

=head1 ARGUMENTS

=over 4

=item AXIS = INTEGER (Given)

The axis to collapse over. [3]

=item ESTIMATOR = STRING (Given)

The method to use for estimating the output pixel values. This can be
any of those listed for the KAPPA:COLLAPSE task. ['integ']

=item SUFFIX = STRING (Given)

File suffix to use. ['linteg']

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for heterodyne observations.

=item *

It uses the Frame's internal header BASELINE_REGIONS to determine the
non-baseline region.

=back

=head1 OUTPUT DATA

=over 4

=item *

The collapsed images with _linteg suffix.

=back

=head1 TASKS

KAPPA: COLLAPSE.

=head1 REQUIRED PERL MODULES

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research Council.

Copyright (C) 2018 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

# Deal with options.
my $axis = ( defined( $_COLLAPSE_CENTRAL_LINE_{AXIS} ) ?
             $_COLLAPSE_CENTRAL_LINE_{AXIS}            :
             3 );

my $estimator = ( defined( $_COLLAPSE_CENTRAL_LINE_{ESTIMATOR} ) ?
                  $_COLLAPSE_CENTRAL_LINE_{ESTIMATOR}            :
                  'integ' );

my $suffix = get_prim_arg( $_PRIM_ARGS_, 'SUFFIX', 'linteg' );

# Get the line nearest the centre of the frequency axis.
my $regions = $Frm->uhdr( "BASELINE_REGIONS" );

if( ! defined( $regions ) ) {
  orac_warn "Cannot calculate line pointing on an unbaselined cube. Possible programming error.";
} else {

  foreach my $i ( 1 .. $Frm->nfiles ) {

    my ( $in, $out ) = $Frm->inout( '_' . $suffix, $i );

    # Find the spectral range of the middlemost (numerically)
    # non-baseline region.
    my @regions = @{$regions->[$i-1]};
    my $low  = $regions[ int( $#regions / 2 ) ];
    my $high = $regions[ int( $#regions / 2 ) + 1 ];

    _GET_DIMENSIONS_ FILE=$in
    my $ndim = $_GET_DIMENSIONS_{'NDIM'};
    my $sectionrange = "$low:$high";
    my $section = join ',', map {$_ == $axis ? $sectionrange : ''} 1 .. $ndim;
    $Frm->uhdr('COLLAPSED_RANGE', $sectionrange);

    # Collapse along this line.
    my $params = "in=$in($section) out=$out axis=3 estimator=$estimator title='Central line' trim=false";
    $Mon{'kappa_mon'}->obeyw( "collapse", "$params" );

    # Report to user.
    orac_print "$in to $out:\n";
    orac_print " Collapsed around central line. Spectral bounds: [$low:$high]\n";

    # Update the Frame object.
    $Frm->file( $i, $out );
  }

  # Display.
  $Display->display_data( $Frm ) if defined $Display;

  # Tidy-up output.
  orac_print "\n";
}
