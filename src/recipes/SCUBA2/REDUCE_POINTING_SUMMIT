# -*-cperl-*-

=head1 NAME

REDUCE_POINTING_SUMMIT - Process POINTING observations in the summit pipeline

=head1 DESCRIPTION

This recipe processes data from a POINTING observation in the SUMMIT
pipeline.

For DREAM/STARE, the images from the individual subarrays are
combined, sky emission removed (assuming a simple DC offset) and
corrected for extinction.

SCAN-mode data are passed to the iterative map-maker. Fast-ramp
flatfield files are processed and stored so the iterative map-maker
can use them.

The image is cropped to 150 arcsec on a side, and if the source is a
known calibrator, the pipeline calculates FCFs. The map is then
calibrated and tagged as a reduced product.

For additional record keeping, the source position is fitted and
offsets in Azimuth and Elevation from the nominal (0,0) position are
derived and logged. Note, however, that these may not be identical to
those derived by the telescope POINTING_FOCUS task.

This recipe is largely the same as L<REDUCE_POINTING|REDUCE_POINTING>
with minor modifications specific to handle data as they are taken.

=head1 NOTES

=over 2

=item *

The pointing offsets, beam size and FCF are written to the log files
C<log.pointing>, C<log.beam> and C<log.fcf>.

=item *

Fast-ramp flatfield data are processed and results written to the log
file C<log.flatfield>.

=item *

This recipe deals with both the 2-D DA-processed images and the time
series data. Primitives which are meant for 2-D images are no-ops for
time-series data.

=item *

The pointing offsets are calculated from the centroid position and a
fit to the source. They are written into the output file as a
C<JCMT::Pointing> extension.

=back

=head1 DISPLAY

The coadd is displayed in Gaia window 2; its variance is displayed in
window 3.

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,

=head1 COPYRIGHT

Copyright (C) 2011,2013 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard introduction
_SCUBA2_HELLO_

# This is the summit pipeline
_SUMMIT_STEER_

# Obtain RMS-tracking data from header
_GET_CHECKRMS_DATA_FROM_HEADER_ GROUP=1

# Process fast-ramp flatfield files
_PROCESS_FASTFLAT_

# Combine subarrays into a single image. This is a no-op for SCAN
# data.
_ALIGN_AND_MOSAIC_SUBARRAY_

# Remove sky - assume a simple DC level is good enough.  This is a
# no-op for SCAN data.
_REMOVE_DC_SKY_ VERBOSE=0

# Correct for extinction, using a single correction factor across the
# entire image.  This is a no-op for SCAN data.
_EXTINCTION_CORRECT_FRAME_ EXTCOR=QUICK

# Create image to analyze
_CREATE_IMAGE_FRAME_ SPREAD=BILINEAR MAKEMOS_METHOD=SIGMA GENVAR=1 MAKEMOS=1 SYSTEM=AZEL

# Trim images to a given size - 150 arcsec is necessary if calculating
# an FCF
_CROP_IMAGE_ALL_ HEIGHT=150 WIDTH=150

# Determine an FCF
_FIND_CALIBRATION_MAP_

# Calibrate data - this will calculate a FCF if a standard source has
# been observed
_CALIBRATE_DATA_

# Create Group file
_MAKE_MOSAIC_GROUP_ COADD_MODE=RUNNING
_SET_TAG_ TAG=reduced GROUP=1

# Determine RMS/NEFD from Group image
_GET_CHECKRMS_DATA_FROM_IMAGE_ GROUP=1

# Write out log file with RMS/NEFD info
_WRITE_CHECKRMS_LOGFILE_ GROUP=1

# Determine beam properties from the Group file
_FIND_BEAM_SIZE_ GROUP=1

# Apply the matched filter to improve signal-to-noise (especially
# useful at 450 um) before determining pointing offsets
_APPLY_MATCHED_FILTER_ GROUP=1

# Determine the pointing offsets and write results to a log file.
# Note that a flag file is not written.
_FIND_POINTING_OFFSETS_

_CREATE_PREVIEW_SUMMIT_ GROUP=1

# Delete temporary files, keeping calibrated data and flatfield
# solutions. Note that the last file created by the frame will not be
# deleted because it is never replaced by anything so will never get
# pushed onto the intermediates array
_DELETE_TEMP_FILES_ KEEP=_cal,_mos,_flat ALSOGRP=1
