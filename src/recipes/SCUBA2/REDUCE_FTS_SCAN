# -*-cperl-*-

=head1 NAME

REDUCE_FTS_SCAN - Recipe for processing FTS-2 SCAN data

=head1 DESCRIPTION

This is a basic recipe for processing FTS-2 SCAN data. All processing is done in
the _FTS2_DR_ primitive.

=head1 NOTES

None.

=head1 DISPLAY

None.

=head1 AUTHORS

Coskun Oba E<lt>josh.oba@uleth.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 University of Lethbridge. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# INFORM ORACDR OF CURRENT DATA REDUCTION
orac_say "\nFTS-2 DATA REDUCTION...\n";

# Standard introduction
_SCUBA2_HELLO_

# PERFORM FTS2 DATA REDUCTION ONLY IF FTS2 IS IN THE BEAM
my $inbeam = $Frm->hdr('INBEAM');
if($inbeam eq 'fts2') {
  _FTS2_INIT_
  _FTS2_APPLY_PHASE_CORRECTIONDS_
  _FTS2_SPECTRUM_
  _FTS2_COMPENSATE_OPTICS_
} else {
  my $msg  = "\nFTS-2 is NOT in the beam!";
     $msg .= "\nFTS-2 data reduction will NOT be applied!\n";
  orac_warn $msg;
}
